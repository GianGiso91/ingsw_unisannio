apply plugin: 'com.android.application'
apply plugin: 'checkstyle'


android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "unisannio.ingsoft.bbm"
        minSdkVersion 18
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    testCompile 'junit:junit:4.12'
}

checkstyle {
    toolVersion = "7.7"
}

task checkstyleMain (type: Checkstyle) {
    ignoreFailures = false
    showViolations = false
    source 'src/main', 'src/release'
    include '**/*.java'
    exclude '**/gen/**'
    exclude '**/R.java'
    exclude '**/BuildConfig.java'
    reports {
        xml.destination "$project.buildDir/reports/checkstyle/main.xml"
    }
    classpath = files()
    configFile = file("${projectDir}/config/checkstyle/checkstyle.xml")
}

task checkstyleTest (type: Checkstyle){
    ignoreFailures = false
    showViolations = false
    source 'src/androidTest'
    include '**/*.java'
    exclude '**/gen/**'
    exclude '**/R.java'
    exclude '**/BuildConfig.java'
    reports {
        xml.destination "$project.buildDir/reports/checkstyle/test.xml"
    }
    classpath = files()
    configFile = file("${projectDir}/config/checkstyle/checkstyle.xml")
}


task checkstyleReport << {
    checkType = project.ext.get("checkType")
    if (file("$buildDir/reports/checkstyle/${checkType}.xml").exists()) {
        ant.xslt(in: "$project.buildDir/reports/checkstyle/${checkType}.xml",
                style:"${rootProject.rootDir}/config/checkstyle/checkstyle-noframes-sorted.xsl",
                out:"$project.buildDir/reports/checkstyle/checkstyle_${checkType}.html"
        )
    }
}

task checkstyle(dependsOn:['checkstyleMain', 'checkstyleTest']){
    description 'Runs Checkstyle inspection against Android sourcesets.'
    group = 'Code Quality'
}

tasks.withType(Checkstyle) {
    reports {
        html.enabled true
        html.stylesheet resources.text.fromFile('config/xsl/checkstyle-custom.xsl')
    }
}